<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[运动框架]]></title>
    <url>%2F2019%2F02%2F15%2F%E8%BF%90%E5%8A%A8%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[一、JSON学习1. 最简单的JSON示例JSON叫做JavaScript Object Notation， JavaScript对象表示法。由JS大牛Douglas发明。我们之前学习过数组：var arr = [“东邪”,”西毒”,”南帝”,”北丐”,&quot;中神通&quot;]数组很好用，arr[2] 就是南帝。但是我们发现，数组的下标，只能是阿拉伯数字，不能是我们任意取的。JSON的示例：123456var obj = &#123;&quot;name&quot;:&quot;考拉&quot;, &quot;age&quot; : 18, &quot;sex&quot; : &quot;不祥&quot;&#125;;console.log(obj.age); //18 语法： { “k” : v,“k” : v,“k” : v,“k” : v }访问某一个属性 能用点语法.就是“的”obj.age; //obj这个对象的age属性 也可以使用 [] 来表示属性, [] 里面是变量：var a = “age”;console.log(obj[a]); //18如果不想用变量，必须加引号：obj[“age”] //182. JSON的嵌套JSON里面，可以又是一个JSON1234567891011var obj = &#123; &quot;name&quot;:&quot;考拉&quot;, &quot;age&quot; : 18, &quot;sex&quot; : &quot;不祥&quot;, &quot;shengao&quot; : 193, &quot;peiou&quot; : &#123; &quot;name&quot; : &quot;Angelababy&quot;, &quot;age&quot; : 16, &quot;shengao&quot; : 168 &#125;&#125;; 所以，想得到168这个数字：obj.peiou.shengao 或 obj[peiou][shengo]现在只知道 Ajax 大量用到JSON。瀑布流的network里面。JSON作为大字典dictionary。 3. JSON项的添加和删除 增加obj里面的项，那么就用点语法赋值： 1234567 var obj = &#123; &quot;name&quot;:&quot;考拉&quot;, &quot;age&quot; : 18 &#125;; age++;//改变属性obj.sex = &quot;male&quot;;console.log(&quot;age&quot;); 删除某一个属性，使用delete关键字：delete obj.age; 4. JSON的遍历无法使用 for 循环会输出 undefined，对象没有 length属性。for…in语句是专门用来遍历JSON的语法： 123for(var k in obj)&#123; console.log(k + &quot;的值是&quot; + obj[k]); &#125; k会依次等于我们的obj里面的属性名，然后在循环语句里面，用obj[k]来读取这个值。 5.对象的克隆：12345678910//把obj1的属性名克隆到obj2var obj1 = &#123; &quot;name&quot; :&quot;花非花&quot;, &quot;eage&quot; : 34, &quot;sex&quot; : &quot;male&quot; &#125;; var obj2 = &#123;&#125;; for(var k in obj1)&#123; obj2[k]=&quot;花非花&quot;; //因为k是变量所以使用方括号 &#125;]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>运动框架</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript实现background 定时循环随机背景图]]></title>
    <url>%2F2019%2F02%2F10%2Fjavascript%E5%AE%9E%E7%8E%B0background%20%E5%AE%9A%E6%97%B6%E5%BE%AA%E7%8E%AF%E9%9A%8F%E6%9C%BA%E8%83%8C%E6%99%AF%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[说明：网址的背景通常为白色，为了美观可进行自定义。再炫酷的效果就是进行随机播放。这里提供两种办法。 一、采用API接口123456setInterval(Getbg,2000); //时间放慢些，1000ms加载有点卡。function Getbg()&#123; var randomBgIndex = Math.round( Math.random() * 166 ); //输出随机的背景图 document.body.style.background=&quot;#9E9E9E url(http://api.yum6.cn/360img?&quot;+randomBgIndex+&quot;) no-repeat &quot;;&#125; 二、固定图片123456789101112131415161718var bodyBgs = [];bodyBgs[0] = &quot;https://ww1.sinaimg.cn/large/87c01ec7gy1fshdwv00e9j211y0lcjs7.jpg&quot;;bodyBgs[1] = &quot;https://ww3.sinaimg.cn/large/87c01ec7gy1fshdwv56rfj21hc0u0n05.jpg&quot;;bodyBgs[2] = &quot;https://ww3.sinaimg.cn/large/87c01ec7gy1fshdwv5u70j21hc0u0n04.jpg&quot;;bodyBgs[3] = &quot;https://ww4.sinaimg.cn/large/87c01ec7gy1fshdwv8wc2j21hc0u0q5d.jpg&quot;;bodyBgs[4] = &quot;https://ww1.sinaimg.cn/large/87c01ec7gy1fshdwva5i5j21hc0u0q66.jpg&quot;;bodyBgs[5] = &quot;https://ww4.sinaimg.cn/large/87c01ec7gy1fshdwvjc6rj21hc0u0tnw.jpg&quot;;bodyBgs[6] = &quot;https://ww1.sinaimg.cn/large/87c01ec7gy1fshdwvw3hsj21hc0u044j.jpg&quot;;bodyBgs[7] = &quot;https://ww4.sinaimg.cn/large/87c01ec7gy1fshdww034zj21hc0u0jvv.jpg&quot;;bodyBgs[8] = &quot;https://ww4.sinaimg.cn/large/87c01ec7gy1fshdww0q12j21hc0u0tbu.jpg&quot;;bodyBgs[9] = &quot;https://ww1.sinaimg.cn/large/87c01ec7gy1fshdww62pdj21hc0u07b7.jpg&quot;;bodyBgs[10] = &quot;https://ww1.sinaimg.cn/large/87c01ec7gy1fshdww8nc0j21hc0u0wjv.jpg&quot;;setInterval(Getbg, 1000);function Getbg()&#123; var randomBgIndex = Math.round( Math.random() * 10 ); //输出随机的背景图 document.body.style.background=&quot;#9E9E9E url(&quot;+ bodyBgs[randomBgIndex] +&quot;) no-repeat &quot;;&#125; 固定地址用的新浪图床，可自行上传图片，更改数组的链接。另外：embed可内嵌音视频]]></content>
      <categories>
        <category>技术教程</category>
      </categories>
      <tags>
        <tag>随机背景</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[免vip登录下载任意音乐歌曲]]></title>
    <url>%2F2019%2F02%2F10%2F%E5%85%8Dvip%E7%99%BB%E5%BD%95%E4%B8%8B%E8%BD%BD%E4%BB%BB%E6%84%8F%E9%9F%B3%E4%B9%90%E6%AD%8C%E6%9B%B2%2F</url>
    <content type="text"><![CDATA[教程简介：大家都知道，我们一般在下载的音乐的时候 肯定会打开 像QQ音乐/酷狗/网易云 等等音乐下载器来下载自己喜欢的歌曲。 但是在网页上 要下载这些歌曲就得必须下载他们的客户端 或者是登录在下载 在或者开VIP来下载。 这样就不愉快了吧 来今天看看这个不需要登录和下载客户端来下载歌曲的方法。 一、下载提示这是用网页版QQ音乐下载的提示 这是用网页版网易云下载的提示 这是用网页版酷我音乐下载的提示 相信大家都看到了 下载歌曲都必须要下载客户端才可以下载 直接开始教程吧 二、教程开始以qq音乐为例子 来免下载登录来下载歌曲 打开QQ音乐搜索你要下载的歌曲 点击进去播放 如下图 让他播放 进入开发者模式按 [f12] 选择 Network 按 ctrl+R 进行筛选多媒体文件 点击如下图的 Size 让他以大小排序 最后一个 2.7MB的文件就是歌曲链接 鼠标 右键 选择歌曲文件弹出选择 Open in new tab 如下就是我们得到了歌曲文件链接 5.名称里面的 C1 代表歌曲文件大小 ，C1 表示文件小，C4表示文件大。C400004RY5sx05Fzp5.m4a这就是大文件，如下图 本教程到此这里 。再送上一个备用音乐搜索下载神器。音乐搜索神器 新年快乐 ！新年快乐 ！新年快乐 ！2019-02-10 10:27]]></content>
      <categories>
        <category>常用小工具</category>
      </categories>
      <tags>
        <tag>下载音乐歌曲</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用小工具集合]]></title>
    <url>%2F2019%2F02%2F09%2F%E5%B8%B8%E7%94%A8%E5%B0%8F%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88%2F</url>
    <content type="text"><![CDATA[一、电影网站 新 6V 电影（www.66s.cc/）这个网站强烈推荐，片源多，新片更新速度快。提供了很多资源下载链接，还可以在线观看，良心。 两个 BT （www.bttwo.com/ ）这个网站片源丰富，可以在线播放也可以下载。 思古影视（http://v.sigu.me/list.php?type=1）二、音乐下载网站 音乐搜索神器 （https://lai.yuweining.cn/music）这个网站可以下载各大付费平台的音乐 51ape （http://www.51ape.com/）这个网站可以下载无损音质的音乐，一首歌几十 M 的体积，注意手机内存就是了。三、音频在线编辑器 音频在线编辑器（https://ringtonecutter.com/）主要用于在线截取音频长度。四、GIF在线制作 GIF在线制作（https://ezgif.com/）支持图片视频制作动图五、图片素材网址 免费素材（https://www.hippopx.com/zh/popular）六、二维码编辑 草料二维码（https://cli.im/tools）]]></content>
      <categories>
        <category>常用小工具</category>
      </categories>
      <tags>
        <tag>小工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo next 主题配置右侧栏的分类和标签打开的是空白]]></title>
    <url>%2F2019%2F01%2F30%2FHexo%20next%20%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8F%B3%E4%BE%A7%E6%A0%8F%E7%9A%84%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE%E6%89%93%E5%BC%80%E7%9A%84%E6%98%AF%E7%A9%BA%E7%99%BD%2F</url>
    <content type="text"><![CDATA[新增一些Hexo中遇见的坑。 1. 新建 标签 和分类 页面 只要在 source 文件夹下新建.md文件，并且文章前面按如下格式表明所属分类和标签就行： 1234title: 自学编程成功概率有多少可能date: 2017-05-26 19:57:47tags: [编程,感悟]categories: 技术 先根目录输入命令 hexo new page categories 会自动新建 categorier 文件夹并生成一个index.md文件，里面的代码为： 12title: categoriesdate: 2019-01-30 23:10:51 同理，「标签」也一样 hexo new page tags 生成 tags 文件夹，其中会自动生成一个index.md文件,代码为：12title: tagsdate: 2019-01-30 23:14:51 2. 开始配置菜单，如「首页」、「分类」、「标签」等这些菜单主题文件下的_config.yml12345678910111213menu: home: / || home about: /about/ || user archives: /archives/ || archive tags: /tags/ || tags categories: /categories/ || th schedule: /schedule/ || calendar sitemap: /sitemap.xml || sitemap # commonweal: /404/ || heartbeat# Enable/Disable menu icons. #菜单图标 menu_icons: enable: true 然后跑去 language 文件夹 zh-Hans.yml 修改中文名字，菜单就以中文显示了。1234567891011menu: home: 首&amp;emsp;&amp;emsp;页 archives: 归&amp;emsp;&amp;emsp;档 categories: 分&amp;emsp;&amp;emsp;类 schedule: 日程表 sitemap: 站点地图 tags: 标&amp;emsp;&amp;emsp;签 about: 关于博主 search: 站内搜索 top: 最受欢迎 # commonweal: 公益404 我们发表文章使用「tags」「categories」只需在文章开头添加如下代码：123456---title: 利用GitHub和HEXO免费搭建个人博客高级 美化篇date: 2019-01-29 22:58:56tags: [hexo建站,hexo部署,github部署,个人博客] #添加的标签categories: hexo博客 #添加的分类--- 如此即可在菜单栏里的「tags」「categories」看见相应的效果。但是实际上打开是空白页面 本文的重点来了。小tips：每次的手输入 categories 我们可以在D:\blog\scaffolds\post.md 添加如下代码，这样每次新建文章，就自动有了。123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: #新加categories: #新加--- 3. Hexo next 主题配置右侧栏的分类和标签打开的是空白先前 categorier 文件夹（D:\blog\source\categories），里面的 index.md 文件打开，修改（即添加一行）为：12345---title: categoriesdate: 2018-01-23 17:14:51type: &quot;categories&quot; #新添加的--- 同理，「标签」12345---title: tagsdate: 2018-01-23 17:14:51type: &quot;tags&quot; #新添加的--- 保存效果为：解决办法参考：Hexo之NexT主题的配置及遇到的问题 4. 插播友链的设置方法主题文件里，就在设置 menu 菜单的下面：123456789social: #友链地址 GitHub: https://github.com/condorheroblog || github E-Mail: mailto:2846124732@qq.com || envelope 简书: https://www.jianshu.com/u/491bd4155f96 QQ: http://sighttp.qq.com/authd?IDKEY=f67c919702f76aff21f09284308fe39875d3f6b466780165social_icons: #友链图标 enable: true icons_only: false transition: false]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo建站</tag>
        <tag>hexo部署</tag>
        <tag>github部署</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用GitHub和HEXO免费搭建个人博客高级 美化篇]]></title>
    <url>%2F2019%2F01%2F29%2FGithub%E5%92%8CHexo%E5%85%8D%E8%B4%B9%E5%BB%BA%E7%AB%99%E9%AB%98%E7%BA%A7%E2%80%94%E2%80%94%E7%BE%8E%E5%8C%96%E7%AF%87%2F</url>
    <content type="text"><![CDATA[回顾 上一篇文章，介绍了如何搭建个人博客。今天自己搞了博客美化，说实话都不简单。虽然涉及到代码，但基本上多是复制粘贴，没一点难度。搞完博客美化就不搞了，装了好几次烦了，没技术，下面开始。 插播 就在昨天又发现了一个新玩法。 hexo高级部署教程,利用github+netlify部署 这篇文章提供的方法和我的不一样，其中他多了一个 netlify 的部署。但思路是一样的，只是静态页面我用的GitHub他用的 netlify 。放在这当个参考。 首先讲一下思路： 熟悉Hexo文件夹 选择新的模板模板美化 总体布置 侧边栏美化 页脚美化 文章美化一、熟悉Hexo文件夹下面只是部分，更多移步：Hexo配置文件详细说明123456789101112131415161718192021222324252627282930313233343536373839404142434445464748├── .github #git信息├── languages #多语言| ├── default.yml #默认语言| └── zh-Hans.yml #简体中文| └── zh-tw.yml #繁体中文├── layout #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制| ├── _custom #可以自己修改的模板，覆盖原有模板| | ├── _header.swig #头部样式| | ├── _sidebar.swig #侧边栏样式| ├── _macro #可以自己修改的模板，覆盖原有模板| | ├── post.swig #文章模板| | ├── reward.swig #打赏模板| | ├── sidebar.swig #侧边栏模板| ├── _partial #局部的布局| | ├── head #头部模板| | ├── search #搜索模板| | ├── share #分享模板| ├── _script #局部的布局| ├── _third-party #第三方模板| ├── _layout.swig #主页面模板| ├── index.swig #主页面模板| ├── page #页面模板| └── tag.swig #tag模板├── scripts #script源码| ├── tags #tags的script源码| ├── marge.js #页面模板├── source #源码| ├── css #css源码| | ├── _common #*.styl基础css| | ├── _custom #*.styl局部css| | └── _mixins #mixins的css| ├── fonts #字体| ├── images #图片| ├── uploads #添加的文件| └── js #javascript源代码├── _config.yml #主题配置文件└── README.md #说明文档//Hexo文件夹详情├── .deploy├── public├── scaffolds├── scripts├── source| ├── _drafts| └── _posts├── themes├── _config.yml└── package.json 加粗标注的两个灰常重要，接下来用到的就是他们。|名称|作用||—|—|deploy|执行hexo deploy命令部署到GitHub上的内容目录public|执行hexo generate命令，输出的静态网页内容目录scaffolds|layout模板文件目录，其中的md文件可以添加编辑scripts|扩展脚本目录，这里可以自定义一些javascript脚本source|文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。drafts|草稿文章posts|发布文章themes|主题文件目录_config.yml|全局配置文件，大多数的设置都在这里package.json|应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮 二、选择新的模板Hexo默认的网站模板，并不能符合我们的需求，所以我们需要自己自定义模板 主题寻找： https://github.com/search?o=desc&amp;q=topic%3Ahexo-theme&amp;s=stars&amp;type=Repositories Hexo的官网主题专栏 推荐第一个，两种方法都是在GitHub上获取的主题 theme 第二个方法可以预览但的在页面下方跳转 GitHub官网下载。第一个方法直接获取下载，主题也是根据下载排行的。 第一个网站，按照模板的受欢迎程度进行排名，可以看到遥遥领先的第一名是一款叫作：next的主题，选用这款即可。想要了解更多，进入到这个主题，可以阅读README.md模板使用说明，还可以查看模板示例网站。 模板1. 下载打开博客根目录下的themes文件夹(注：后文所说的根目录是指我的：D:\blog你的根据自己情况)，右键 Git Bash 运行下述命令：git clone https://github.com/iissnan/hexo-theme-next themes/next就可以把这款主题的安装文件下载到电脑中。 2. 使用打开D:\blog_config.yml文件，找到 theme字段，修改参数为：theme: hexo-theme-next，然后根目录运行下述命令： hexo cleanhexo s -g这样，便成功应用新的 next 主题，浏览器访问 :http://localhost:4000，查看一下新的博客页面。当当当！是不是更清爽了，不过你可能看到的不同，没关系。这款主题包含4种风格，默认的是Muse，也可以尝试其他风格。具体操作：打开D:\blog\theme\hexo-theme-next_config.yml，定位到Schemes，想要哪款主题就取消前面的#，我的博客使用的是Pisces风格。12345# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini 顺便把图标注一下下，下面用到。 三、模板美化1. 设置网站信息 12345678# Sitetitle: Condor Herosubtitle: Divine Condordescription: 记录生活，努力学习。keywords: 前端、学习、提升、建站、努力。author: Condor Herolanguage: zh-Hanstimezone: 参数 描述 title 网站标题 subtitle 网站副标题 description 网站描述 author 您的名字 language 网站使用的语言 timezone 网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。 看表根据我的模板填写。可自行修改。 2. 动图背景 实现效果图 太玄了，影响阅读不是太喜欢，就去掉了。具体实现方法 「点击这里」 四、侧栏美化1. 菜单设置修改侧栏菜单，（上图我标注的①）文件路径：D:\blog\themes\hexo-theme-next/_config.yml把英文菜单 # 去掉，添加菜单。123456789menu: home: / || home about: /about/ || user archives: /archives/ || archive tags: /tags/ || tags categories: /categories/ || th schedule: /schedule/ || calendar sitemap: /sitemap.xml || sitemap # commonweal: /404/ || heartbeat 修改英文菜单对应的中文名。文件路径：D:\blog\themes\hexo-theme-next\languages\zh-Hans.yml修改如下：1234567891011menu: home: 首&amp;emsp;&amp;emsp;页 archives: 归&amp;emsp;&amp;emsp;档 categories: 分&amp;emsp;&amp;emsp;类 tags: 标&amp;emsp;&amp;emsp;签 about: 关于博主 search: 站内搜索 top: 最受欢迎 schedule: 日程表 sitemap: 站点地图 # commonweal: 公益404 注意：两字的中间添加&amp;emsp;&amp;emsp;可实现列对齐。 2. 新建标签、分类、关于页面 在D:/blog分别运行命令：hexo new page &quot;tags&quot;hexo new page &quot;categories&quot;hexo new page &quot;about&quot;然后，打开D:\blog\source就可以看到上述三个文件夹。要添加关于博主的介绍，只需要在/about/index.md文件中，用markdown书写内容即可，写完后运行：hexo d -g，便可看到效果。 3. 侧栏社交链接图标设置侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件中（D:\blog\themes\hexo-theme-next/_config.yml文件中）。 （1）链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。123456789101112131415# Social linkssocial:social: GitHub: https://github.com/condorheroblog E-Mail: mailto:2846124732@qq.com || envelope 简书: https://www.jianshu.com/u/491bd4155f96 QQ: http://sighttp.qq.com/authd?IDKEY=f67c919702f76aff21f09284308fe39875d3f6b466780165 #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skype （2）设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo 4 添加头像并美化博客添加头像有两种方法：第一种是放在本地文件夹中：D:\blog\public\uploads，并且命名为avatar.jpg。第二种是将图片放在七牛云中，新浪图床 然后传入链接。推荐这种方式，可以加快网页打开速度。站点文件任意行添加下面代码：12345# 添加头像# avatar: /uploads/avatar.jpg #方法1本地图片avatar: https://ws3.sinaimg.cn/large/005BYqpggy1fzgzvfkc2wj30p20p2abj.jpg # 方法2网络图片# 注意：uppoads文件夹是在主题里的文件夹，没有则新建# D:\blog\themes\hexo-theme-next\source\uploads\avatar.jpg 头像变圆形可参考：头像变圆并旋转D:\blog\themes\next\source\css\_common\components\sidebar\sidebar-author.styl，在里面添加如下代码：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;/*再进一步想点击产生旋转效果，就继续在该文件下方添加代码：*/img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 5. 设置网站logo跟设置头像其实是一个思路，都是在配置文件中引入正确的地址就可以了，不过网站的logo是对图片有要求的，我们需要在 Favicon在线制作 工具中制作32*32的.ico图片，然后放在source/images下面。然后在主题配置文件下添加主题配置文件中添加：favicon: images/favicon.ico 五、页脚的美化1. 补充建站时间设置/RSS设置点击了解 什么是RSS12345678910# Set rss to false to disable feed link.# Leave rss as empty to use site&apos;s feed link.# Set rss to specific value if you have burned your feed already.rss: #RSSfooter: # Specify the date when the site was setup. # If not defined, current year will be used. # 建站年份 since: 2018 #根据实际情况修改 2. 隐藏Hexo/主题和 Next 版本12345678910111213141516171819&lt;!-- 一共两处注释--&gt;&lt;!--&#123;% if theme.footer.powered %&#125; &lt;div class=&quot;powered-by&quot;&gt;&#123;# #&#125;&#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;&#123;% endif %&#125;由hexo驱动--&gt;&#123;% if theme.footer.theme.enable %&#125; &lt;!--&lt;div class=&quot;theme-info&quot;&gt;&#123;# #&#125;&#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;版本号--&gt;&#123;% endif %&#125; 3. 时间和用户名之间添加心形主题文件：建站时间下面修改icon: heart12345678910111213footer: # Specify the date when the site was setup. # If not defined, current year will be used. # 建站年份 since: 2018 # Icon between year and copyright info. # 年份后面的图标，为 Font Awesome 图标 # 自己去纠结 http://fontawesome.io/icons/ # 然后更改名字就行，下面的有关图标的设置都一样 # Icon between year and copyright info. #icon: user icon: heart 如果还想让心变成跳动的红心，则继续在:上面的footer.swig文件中修改：为 #一定要加id=”heart”12345678&lt;div class=&quot;copyright&quot;&gt;&#123;##&#125;&#123;% set current = date(Date.now(), &quot;YYYY&quot;) %&#125;&#123;##&#125;&amp;copy; &#123;% if theme.footer.since and theme.footer.since != current %&#125;&#123;&#123; theme.footer.since &#125;&#125; &amp;mdash; &#123;% endif %&#125;&#123;##&#125;&lt;span itemprop=&quot;copyrightYear&quot;&gt;&#123;&#123; current &#125;&#125;&lt;/span&gt; &lt;span class=&quot;with-love&quot;&gt; &lt;i class=&quot;fa fa-&#123;&#123; theme.footer.icon &#125;&#125;&quot;&gt;&lt;/i&gt; &lt;/span&gt; &lt;span class=&quot;author&quot; itemprop=&quot;copyrightHolder&quot;&gt;&#123;&#123; theme.footer.copyright || config.author &#125;&#125;&lt;/span&gt; 接着在自定义custom.styl文件中，添加以下代码：1234567891011121314// 1 页脚加闪烁红心// 自定义页脚跳动的心样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(192, 0, 39);&#125; 4. 引入不蒜子访问量和访问人次统计 不蒜子的添加非常非常方便，不蒜子在footer.ejs中的合适位置，看你要显示在哪个地方，添加。 我的办法：D:blog\themes\hexo-theme-next\layout_partials\footer.swg添加代码如下：12345678&lt;!--以下为添加的代码--&gt; &lt;!--统计start--&gt; &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; &lt;div class=&quot;powered-by&quot;&gt; &lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; &lt;/span&gt; &lt;/div&gt; 六、文章的美化1. 设置预览摘要在上面我们选主题，设置完模式后，我们会发现，尽管首页显示的是所有文章的列表，但是每一篇文章都显示了所有内容，这样感觉看起来不舒服，这时候可以启用预览摘要模式，在主题配置文件中找到auto_excerpt属性，将enable设置为true ，将length设置为想要预览到的字数。 2. 添加阅读全文 实现在主页只展示部分文字，其他文字隐藏起来，通过点击’阅读更多’来阅读全文。方法就是写每一篇文章的时候，在必要的地方添加即可。例如：1234567891011---title: Github+Hexo搭建你的个人博客：搭建篇id: hexo01categories: hexo博客**tags: [hexo,个人博客,github]**标签的写法keywords: hexo,搭建博客,github pages,next---4块钱,你就能够在茫茫互联网中拥有一处专属于你的小天地，丈量你走过的每一个脚印。 &lt;!-- more --&gt; 摘要： 对于一个不懂任何前端的纯小白来说，搭建博客是件很有挑战的事。3. 文章摘要配图参考这个教程即可：http://wellliu.com/2016/12/30/%E3%80%90%E8%BD%AC%E3%80%91Blog%E6%91%98%E8%A6%81%E9%85%8D%E5%9B%BE/附上我的设置：在自定义文件中添加如下代码：1234567891011121314151617181920212223242526// img.img-topic &#123;// width: 100%;//&#125;//图片外部的容器方框.out-img-topic &#123; display: block; max-height:350px; //图片显示高度，如果不设置则每篇文章的图片高度会不一样，看起来不协调 margin-bottom: 24px; overflow: hidden;&#125;//图片img.img-topic &#123; display: block ; margin-left: .7em; margin-right: .7em; padding: 0; float: right; clear: right;&#125;// 去掉图片边框.posts-expand .post-body img &#123; border: none; padding: 0px;&#125; 4. 修改文章底部的那个带#号的标签 实现效果图具体实现方法修改模板/themes/next/layout/_macro/post.swig，搜索 rel=&quot;tag&quot;&gt;#，将 # 换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 5.添加文章搜索安装插件cnpm install hexo-generator-searchdb --save 站点配置文件 ，添加12345search: path: search.xml field: post format: html limit: 10000 主题配置文件 ，字段local_search123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: ture # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 6. 显示每篇文章的阅读量参考这个教程即可：http://www.jeyzhang.com/hexo-next-add-post-views.html 7. 添加打赏功能 参考下面的教程：https://www.cnblogs.com/mrwuzs/p/7943337.htmlhttps://blog.csdn.net/lcyaiym/article/details/76796545 自定义样式不得不说next还是很人性化的，你可以个性化定制你的网站，你所有的改动（css）需要放在主题文件的source/css/_costum/costum.styl文件中，会覆盖原来的css，所以只要你不想要你修改的样式，只需要删除这个文件夹就可以了，再也不用担心还原不回去了~ 美化每个人的标准不一样，以上是基本操作。这里再补充几条，以供学习。 最全Hexo安装出错案列Hexo美化大全hexo的next主题个性化教程：32中炫酷方式Hexo官方开发文档 找资料发现的一个网站很不错，一看站长是 美女。贴上她的blog，学习一下：sunshine940326 全文完。。。]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo建站</tag>
        <tag>hexo部署</tag>
        <tag>github部署</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用GitHub和HEXO免费搭建个人博客 基础篇]]></title>
    <url>%2F2019%2F01%2F27%2F%E5%88%A9%E7%94%A8GitHub%E5%92%8CHEXO%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E5%9F%BA%E7%A1%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[写在前面 昨天为了搭建博客，硬是愣愣的搞到两点多钟，来来回回装了十几遍还没弄好。今天终于完成了。趁着现在手熟马上写一下博客，强化一下记忆。 前言 前天在逛 虫部落社区 时看到一个帖子。免服务器如何建立个性简约博客 因为好奇建博客还能免费，就点进去看了一下。别说思路还真行的通，重要的是作者还是个高中生。更是厉害了。不过他文章写得太简单，估计很少有人能照他写的做出来。 一、准备这里讲一下搭建博客的好处:我为什么写博客 网上有不少的写作平台，程序员有各种博客站点。业余的也有「知乎」「简书」等平台。不过他们的板式太不够个性化了。身为 90后的你 00后的我怎么能容忍。 拥有自己命名的博客，里面什么内容都是自己决定。写个人随笔，学习心得笔记等，最重要的是足够 酷。 下面简单梳理搭建博客的主要步骤： 安装 node 和 git 软件 安装 Hexo 配置 Hexo 注册 GitHub 并创建 库 且生成 GitHub Pages 配置SSH秘钥 本地的Hexo文件更新到Github的库中 新建第一个博客 相关名词解释：Hexo：一种常用的博客框架，有了它建立博客非常简单。你可以认为它是就是一种博客模板,若想详细了解Hexo的使用，移步 Hexo官方网站 。其作用相当于（以下「相当于」这三个字后面加粗的内容是给有基础的小伙伴看得，不理解的可以跳过不影响阅读）建博客的WordPress。 Github：一个全世界程序猿聚集的知名网站。免费的远程仓库和开源协作社区。我们需要利用网站里的Github Pages功能来托管需发布到网上的博客的相关文件和代码。相当于阿里云腾讯云提供 域名 服务器 提的供商 Git： 一种版本控制系统。我们在自己的本地电脑写博客，如何把博客同步到Github，然后发布到网上去？就需要用这个软件去写几行代码然后就能搞定，后期用的最多的就是它。相当于电脑的操作系统。 Node.js： 提供JavaScript的开发环境，安装好以后就不用跟它再打交道，所以不用太关注它。相当于我们的电脑吧。 把以上步骤熟读至背诵，因为操作过程出现的问题多半是不熟导致的。OK 了解大致步骤我们一起来操作。 操作平台:Win7 64位 其他系统步骤类似 二、安装 node 和 git 软件1.安装node.js进入 Nodejs 官网下载适配自己系统的版本官网：https://nodejs.org/en/download/除了改一下安装路径，其他不懂一路默认就行。 2. 安装git进入官网 Git 选择适配版本下载官网：https://git-scm.com/download/win除了改一下安装路径，其他不懂一路默认就行。PS：git官网下可能下载不了文件。原因：只能讲请遵守我国法律。这里送你个下载方法：访问链接： https://github.com/waylau/git-for-win如果你会翻墙请忽略此方法。 3. 查看安装效果检查以上两个软件是否安装成功。技巧cmd制作电脑桌面最左下方&gt;右击&gt;在搜索程序和文件里输入 cmd 回车 &gt;分别输入以下内容123git versionnode -vnpm -v 输入一次回车一次。将会返回版本号(version)。未返回请重新安装。图示如下：至此，软件安装步骤完成。 三、安装 Hexo 配置 Hexo 安装Hexo 安装npm淘宝源 打开cmd下运行npm install -g cnpm --registry=https://registry.npm.taobao.org安装淘宝源只是为了让接下来的下载地址更换为国内下载链接，试了下载速度和安不安没啥区别。下图里面出现WARN警告，没事下面有版本号出现，就安装成功了。 下载Hexo及其插件在桌面右击，选择Git Bash Herecnpm install hexo-cli -g回车 自动下载hexo安装包cnpm install hexo-deployer-git --save回车 自动下载支持git的插件包ps:如果你没安装第一步的淘宝源请把所有的cnpm换成npm 解压安装配置hexo首先建立一个不在C盘的文件夹，我演示是建在D盘里 D:/blog 在此目录下右击鼠标点击Git Bash Here 进入Git命令框，执行下列操作：hexo init回车 hexo的初始化 相当于解压 cnpm install回车 hexo的安装 hexo generate #回车 构建静态文件 hexo server #回车 启动server 服务其中这两行代码可以合成一行,如下：hexo s -g启动服务后访问http://localhost:4000/，即可查看本地服务器效果 说明：如果提示错误 ctr+c 停止本地服务器生成的网页也就无法访问了。hexo server -p 4000 到此本地服务器设置完成。 四、注册 GitHub 并创建 库 且生成 GitHub Pages1. 第一步：注册或者登陆GIthub账户 已有账号可跳过到第二步Guthub官网：https://github.com/点击sign in完成是可能会有邮件验证。打开输入账号密码验证下就行了。 第二步：创建项目代码库(reposistory) 1.登陆后点击New repository2.配置仓库信息如下图所示：[图片上传失败…(image-2523a0-1548604607943)] 注意：仓库名字的格式为 username(用户名).github.io 与你刚刚注册的最好一样。最下面的 initialize请打上勾。点击 create repository 创建。 3. 第三步开启gh-pages功能 点击github主页点击头像下面的 Your profile,找到新建立的username.github.io文件打开，点击settings，往下拉动鼠标到GitHub Pages。点击选择choose a theme，随便选择一个，（之后我们要更改这些丑陋的模板），然后select theme保存就行了。ps:第三步可以不做，因为下面链接本地和GitHub页面时，会覆盖掉。写在这里熟悉一下，顺便练练手。上面注册账号很像买域名，创建库就是买服务器，生成静态页面就是两者的绑定。至此，服务器也完成了配置。 五、配置SSH密钥到上面我们已经完成了一大半了。现在让我们电脑上生成的页面放GitHub上，上网输入网址就能看到我们的网址页面内容了。但首先的让它们认识一下。我称之为「握手」，也就是这里的「秘钥」，让它们打开彼此的大门。 第一步 看看是否存在SSH密钥(keys) 检查本机用户home目录下是否存在.ssh目录，防止万一两人提前认识，我们不是瞎忙活了吗！桌面右击，打开Git Bash,并运行:cd ~/.ssh返回：bash: d:command ont found这种简单的英语不用解释了吧。没有，紧接着我们创建秘钥。 第二步 创建一对新的SSH密钥(keys) 继续输入下面代码：ssh-keygen -t rsa -C &quot;your_email@example.com&quot;这将按照你提供的邮箱地址，创建一对密，「your_email@example.com」里面是你的电子邮件地址。连续回车三次，你会看到如下代码1234Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):Enter passphrase (empty for no passphrase): Enter same passphrase again: 第一行问你是否创建公钥；第二行文件存储位置，不手动输入，默认方式存储；第三行输入密码；第四行密码确认。我们并没输入，因为没密码才是最安全的。其实是因为没用。哈哈哈。这里还要复制一下秘钥，留着第三步粘贴用，两种方法： 使用物理路径 根据上图 /c/Users/you/.ssh/id_rsa路径找到文件使用文本编辑器打开复制。 代码方法 运行如下命令，会将公钥的内容复制到系统粘贴板(clipboard)中。clip &lt; ~/.ssh/id_rsa.pub第三步 GitHub写入密钥(keys) 打开Github官网登录后点击头像，打开Settings设置这里面title 是自己随便起的名字， key里面粘贴第二步复制的秘钥，然后点击添加第四步 测试是否添加秘钥成功继续写入代码：ssh -T git@github.com回车后根据提示输入yes后会得到以下信息，在最后一行看到「Hi username」username你的用户名，说明ssh配置成功12345The authenticity of host &apos;github.com (192.30.255.113)&apos; can&apos;t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added &apos;github.com,192.30.255.113&apos; (RSA) to the list of known hosts.Hi condorheroblog! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 第五步 设置用户信息现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。 Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字根据自己的喜好自己取，而不是GitHub的昵称。分别输入回车：12git config --global user.name &quot;username&quot;//用户名git config --global user.email &quot;youremail@163.com&quot;//填写自己的邮箱 电脑发去GitHub握手成功。几下下一个握手。 六、本地的Hexo文件更新到Github的库中 登陆GitHub打开自己的项目 username.github.io 复制Github项目仓库地址，即点击clone or download 绿色按钮，然后复制文本框里的url地址 修改hexo配置文件 _config.yml在我们创建D盘里的blog目录下找到_config.yml文件，然后右击用文本编辑器进行修改，打开直接滑到最后，进行替换或手写都行。其中repo后跟的是Github里复制的地址。1234deploy: type: git repo: https://github.com/condorheroblog/condorheroblog.github.io.git branch: master 注意：repo冒号后面一定要是英文的一个空格，我就在这出错了。 将hexo部署到Github在本地blog目录下右击打开Git Bash，输入一下命令：hexo g -d命令执行后，会提示输入Github的账号和密码，输入登陆后，blog项目会自动部署到Github上。假如这时候，报错 ERROR Deployer not found: git，那么就是你的deployer没有安装成功，你需要执行如下命令再安装一次：cnpm install hexo-deployer-git --save这样，你再执行hexo g -d，你的博客就部署到Github上了。 访问博客以上操作完成后，我们的博客就会部署到Github上了，我们只需要输入username.github.io就可以访问自己的博客了。七、新建第一个博客 接下来你可以自己新建一个文档来写下你的第一篇博客并在网页上测试。 同样在根目录D:\blog中右击git Bash here运行下面命令： hexo new 第一篇博客注：第一篇博客是名称可以随便修改然后打开D:\blog\source_posts文件夹，就可以看到一个第一篇博客.md的文件。也可以直接在D:\blog\source_posts中新建一个md文件，我就是这么做的。用支持markdown语法的软件打开该文件进行编辑即可。执行以下命令即可在我们的站点看到新的文章。hexo clean #清除缓存hexo g #生成文件夹hexo d#部署 # hexo d与hexo g可合并为 hexo d -g更多hexo命令参考hexo官方文档然后，在网址中输入username.github.io即可看到你的博客上，出现第一篇博客这篇新的文章。 至此，你的个人博客初步搭建过程就完成了。 以上就是建博客的基本流程，基本上装个十几二十遍就熟了。下次写高级篇，进行博客美化。]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo建站</tag>
        <tag>hexo部署</tag>
        <tag>github部署</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无缝连续滚动原理的实现]]></title>
    <url>%2F2019%2F01%2F20%2F%E6%97%A0%E7%BC%9D%E8%BF%9E%E7%BB%AD%E6%BB%9A%E5%8A%A8%E5%8E%9F%E7%90%86%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[原理剖析：页面上图片复制一倍在后面，长长的火车在移动：当你赋值的后半段火车的0号头贴到了盒子的左边框的时候，那么就瞬间移动到原点，重新执行动画：实现步骤： HTML CSS知识构建静态页面 逻辑实现使用绝对定位 JS定时器轮播 代码的实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;无缝连续滚动的实现&lt;/title&gt; &lt;style&gt; *&#123; margin: 0; padding: 0; &#125; .rolling&#123; width: 800px; height: 130px; border: 10px solid #ccc; margin: 100px auto; position: relative; overflow: hidden; &#125; .rolling .m_unit&#123; width: 5000px; /*这是运动的单位，这个宽度随便取，大一点，最少的大于rolling小于运动盒子的内容*/ position: absolute; top: 0; left: 0; &#125; .rolling ul&#123; list-style: none; &#125; .rolling ul li&#123; float: left; margin-right: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;rolling&quot; id=&quot;rolling&quot;&gt; &lt;div class=&quot;m_unit&quot; id=&quot;m_unit&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/0.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/3.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/4.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/5.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/6.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/shuzi/7.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; //得到元素 var rolling = document.getElementById(&quot;rolling&quot;); var m_unit = document.getElementById(&quot;m_unit&quot;); var listul = m_unit.getElementsByTagName(&quot;ul&quot;)[0]; //得到图片的数量，计算折返点用的，折返点就是210 * 图片数量 var lislength = listul.getElementsByTagName(&quot;li&quot;).length; //复制一倍的li 最笨的办法直接把 li 在写一遍 listul.innerHTML += listul.innerHTML; //信号量 var nowleft = 0; var timer; //默认调用move move(); //鼠标进入 rolling.onmouseover = function()&#123; clearInterval(timer); &#125; //鼠标离开 rolling.onmouseout = function()&#123; move(); &#125; function move()&#123; //运动 timer = setInterval(function()&#123; nowleft -= 3; if(nowleft &lt; -210 * lislength)&#123; nowleft = 0; &#125; m_unit.style.left = nowleft + &quot;px&quot;; &#125;,10); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 滚动的回拉位置的设置方式： 直接计算写常量，太死板。 等宽，计算个数。可适应 图片个数不同。案例即是这种。思考： 如果图片不等宽，长短不一怎么办？ 解决方法有两个：方法1：遍历前半部分（复制一倍之前）所有的li，把所有的li的宽度累加，累加之后就是折返点。offsetWidth，这个东西不带margin。所以累加的时候，有需要得到计算后的margin十分麻烦。所以我们不考虑方法1。方法2：我们发现，折返点就是复制的假火车第1张图的offsetLeft值。所以，如果原来的li的个数是lilength，那么假火车的第1张图就是lis[length]。 先讲教训：但是写完发现效果不对，未能达到如期预料。原因 Google 浏览器会把图片延迟加载，以达到最快网络体验。解决办法： 添加 window,onload()设置页面加载完，再加载 js 效果。 添加 img.onload() 事件。 考虑到页面只有一个 onload，这里选择第二个办法。主要程序修改如下：1234567891011for(var i = 0 , count = 0 ; i &lt; imgs.length ; i++)&#123; imgs[i].onload = function()&#123; count++; if(count == imgs.length)&#123; //所有图片加载完毕了，就有折返点了： zhefandian = lis[lislength / 2].offsetLeft; //所有图片加载完毕了，再开始运动 move(); &#125; &#125; &#125; type12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455 //得到元素 var rolling = document.getElementById(&quot;rolling&quot;); //大盒子 var m_unit = document.getElementById(&quot;m_unit&quot;); //运动单位 var listul = m_unit.getElementsByTagName(&quot;ul&quot;)[0]; //ul var imgs = listul.getElementsByTagName(&quot;img&quot;); //img //图片的原来数量 var zhefandian; //折返点 //复制一倍的li listul.innerHTML += listul.innerHTML; //得到所有li，包括新li var lis = listul.getElementsByTagName(&quot;li&quot;); //所有li的个数，包括新li var lislength = lis.length; //现在我们要计算折返点，但是每个li的宽度都不一样，所以现在假火车的开头元素的offsetLeft就是折返点。这个元素是lis[lislength / 2];比较麻烦的是，由于Chrome的机理，如果要读取offsetLeft值必须保证所有图片加载完毕。 for(var i = 0 , count = 0 ; i &lt; imgs.length ; i++)&#123; imgs[i].onload = function()&#123; count++; if(count == imgs.length)&#123; //所有图片加载完毕了，就有折返点了： zhefandian = lis[lislength / 2].offsetLeft; //所有图片加载完毕了，再开始运动 move(); &#125; &#125; &#125; //信号量 var nowleft = 0; var timer; //鼠标进入 rolling.onmouseover = function()&#123; clearInterval(timer); &#125; //鼠标离开 rolling.onmouseout = function()&#123; move(); &#125; function move()&#123; clearInterval(timer); //运动 timer = setInterval(function()&#123; nowleft -= 5; if(nowleft &lt; -zhefandian)&#123; nowleft = 0; &#125; m_unit.style.left = nowleft + &quot;px&quot;; &#125;,20); &#125;&lt;/script&gt; 小tip:因页面加载图片有延迟，可以给页面添加一个加载背景，一个 GIF 图片的背景。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>连续滚动图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript的定时器 setInterval]]></title>
    <url>%2F2019%2F01%2F15%2FJavaScript%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8setInterval%2F</url>
    <content type="text"><![CDATA[一、 定时器window对象有一个方法，叫做 window.setInterval(函数，间隔时间); 能够使每间隔时间，调用函数一次。我们习惯叫做定时器，按理说叫做“间隔器”。单词： interval 间隔的意思 演示：控制台间隔一定时间输出随机数1234567891011121314&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;间隔&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; window.setInterval(function()&#123; console.log(Math.random()); &#125;,1000)； &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 间隔时间是以毫秒为单位，1000毫秒就是1秒。 “毫”就是千分之一， “厘”就是百分之一， “分”就是十分之一 第一个参数，是一个函数，所以可以把一个匿名函数往里放，更可以用一个有名函数的引用放里面。1234function fun()&#123; console.log(Math.random()); &#125; window.setInterval(fun,1000); setInterval() 能够让函数每间隔时间执行。window 对象，可以不写。定时器没有所谓的start、begin方法，只要setInterval了，定时器就开始运行了。 二、简单运动模型视觉暂留：把连续相关的画面，连续播放，就是运动了。动画片的基础书角动画了解一下。123456789101112131415161718192021222324252627282930313233&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;定时器&lt;/title&gt; &lt;style&gt; div&#123; width: 100px; height: 100px; background-color: #EE0; position: absolute; left: 100px; top: 100px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;box&quot;&gt;&lt;/div&gt; // 定义一个盒子 &lt;script&gt; var box=document.getElementById(&quot;box&quot;); //获取元素 var nowleft = 100; //定义信号量 function move()&#123; nowleft += 20; //增加信号量 if(nowleft &gt; 500)&#123; nowleft = 100; //设置运动宽度100~500 &#125; box.style.left=nowleft+&quot;px&quot;; //改变位置 &#125; setInterval(move,100); //定时器间隔100ms &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 间隔时间是20毫秒，那么1秒中执行函数50次。也就是说，这个动画是每秒50帧，50 fps。 那么现在我们来研究一个事儿，如果让这个盒子跑得更快？（-1最快）上面的案例中，数值20间隔时间，这个数字越小运动越快；数值10叫做步长，每一步的变化量，这个数字越大运动越快。 我们就有一个感觉，JavaScript描述动画，描述的是每一步的改变，并不是直接描述终点。 三、定时器的停止123456789101112131415161718192021222324252627282930313233343536373839404142 &lt;style type=&quot;text/css&quot;&gt; div&#123; width: 80px; height: 80px; background-color: gold; position: absolute; top: 111px; left: 111px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;input type=&quot;button&quot; value=&quot;开始&quot;/&gt; &lt;input type=&quot;button&quot; value=&quot;暂停&quot;/&gt; &lt;div id=&quot;box&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; //得到盒子和按钮 var oDiv = document.getElementById(&quot;box&quot;); var startBtn = document.getElementsByTagName(&quot;input&quot;)[0]; var pauseBtn = document.getElementsByTagName(&quot;input&quot;)[1]; //信号量 var nowleft = 111; var timer; //存放定时器的引用的下面有引用必须全局变量 //监听开始按钮 startBtn.onclick = function()&#123; //设表先关 clearInterval(timer); //设置定时器 timer = setInterval(function()&#123; nowleft += 2; oDiv.style.left = nowleft + &quot;px&quot;; &#125;, 20); &#125; //监听停止按钮 pauseBtn.onclick = function()&#123; //清除定时器 clearInterval(timer); &#125; &lt;/script&gt; setInterval 的时候，要给这个定时器一个变量引用，停止的时候只需要clearInterval(timer); 知识点：设表先关当我们每点一次开始，都是给定时器加速一次，发现盒子越来越快。解决办法给表设置结束重新开始。 我们的开始按钮是：1234567startBtn.onclick = function()&#123; //设置定时器 timer = setInterval(function()&#123; nowleft += 2; oDiv.style.left = nowleft + &quot;px&quot;; &#125;, 20);&#125; 这个按钮持续点击，盒子运动越来越快。这是因为每次点击，盒子身上就有更多的定时器在作用。解决办法，就是四个字的口诀“设表先关”。123456789startBtn.onclick = function()&#123; //设表先关 clearInterval(timer); //设置定时器 timer = setInterval(function()&#123; nowleft += 2; oDiv.style.left = nowleft + &quot;px&quot;; &#125;, 20);&#125; 还要注意一个事情：当盒子到终点，自己停止。比如起点是100，终点我们想要600自动停止：下面的方法是错误的：12345678var timer = setInterval(function()&#123; if(nowleft &lt; 600)&#123; nowleft += 13; oDiv.style.left = nowleft + &quot;px&quot;; &#125;else&#123; clearInterval(timer); &#125;&#125;,200); 初始值是100，所以盒子的运动轨迹就是100、113、126……594、607停表所以盒子停下来的位置，不是我们想要的600，而是607 所以解决办法，就是验收、拉回终点、停表：“拉终停表”123456789var timer = setInterval(function()&#123; nowleft += 7; if(nowleft &gt; 600)&#123; nowleft = 600; clearInterval(timer); &#125; oDiv.style.left = nowleft + &quot;px&quot;; console.log(nowleft);&#125;,20);]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>定时器</tag>
        <tag>setInterval</tag>
        <tag>clearInterval</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript offset使用]]></title>
    <url>%2F2019%2F01%2F13%2FJavaScript%20offset%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[一、快捷位置和尺寸DOM已经提供给我们计算后的样式，但是还觉得不方便，所以DOM又提供给我们一些API： ele.offsetLeft ele.offsetTop ele.offsetWidth ele.offsetHeight ele.clientWidth ele.clientHeight 1.1 offsetLeft属性和offsetTop属性这两个属性的兼容性非常差，不要着急，我们慢慢来看。 IE9、IE9+、Chrome等高级浏览器： 一个元素的offsetLeft值，就是这个元素左边框外，到自己的offsetParent对象的左边框内的距离。 每一个元素，天生都有一个属性，叫做offsetParent，表示自己的“偏移参考盒子”，我们不称呼中文，就叫offsetParent。这个offsetParent是谁呢？ 就是自己祖先元素中，离自己最近的已经定位的元素，如果自己的祖先元素中，没有任何盒子进行了定位，那么offsetParent**对象就是body**。 IE6、IE7： IE6、7的offsetParent对象是谁，和高级浏览器有非常大的不同。 情形1：自己如果没有定位属性，那么自己的offsetParent对象就是自己的祖先元素中离自己最近的有width或者有height的元素：1234567&lt;div class=&quot;box1&quot;&gt; &lt;div class=&quot;box2&quot;&gt; → 你好，我有宽度 , offsetParent &lt;div class=&quot;box3&quot;&gt; → 你好，我没有宽高 &lt;p&gt;&lt;/p&gt; → 你好，我没有定位 &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 1234567&lt;div class=&quot;box1&quot;&gt; &lt;div class=&quot;box2&quot;&gt; &lt;div class=&quot;box3&quot;&gt; → 你好，我没有宽高，有定位 , offsetParent &lt;p&gt;&lt;/p&gt; → 你好，我没有定位 &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 情形2：自己如果有定位属性 那么自己的offsetParent就是自己祖先元素中离自己最近的有定位的元素。 数值就是自己的左外边框到offsetParent对象的左内边框的值。 IE8： IE8的offsetParent是谁呢？和高级浏览器一致： 无论自己是否定位，自己的offsetParent就是自己祖先元素中，离自己最近的已经定位的元素。 这一点，没有任何兼容问题！ 但是，多算了一条边框 总结： 名称| IE6、7| IE8|IE9、IE9+、高级浏览器|:—:|:—:|:—:|:—:|offsetParent|如果自己没有定位，那么就是自己父亲中有width或者有height或者有定位的元素如果自己有定位，那么就是和高级浏览器一致。|和高级浏览器一致|自己祖先元素中，离自己最近的已经定位的元素|offsetLeft|和高级浏览器一致|多算一条border|自己的border外到offsetParet对象的border内| 兼容性解决办法，不是能力检测，也不是版本检测，而是善用这个属性，要确保属性的使用条件： 自定位，父无边**(父亲也要定位，但是为了顺口，就不多说了)** 这样的话，所有浏览器的值都是一样的，offsetLeft、offsetTop值是number类型的，可以直接参与运算，不需要parseInt() 1.2 offsetWidth和offsetHeight全线兼容，是自己的属性，和别的盒子无关。 一个盒子的offsetWidth值就是自己的 width+左右padding+左右border的宽度 如果盒子没有宽度，那么所有浏览器都将把px值当做offsetWidth，而不是100%； 如果盒子没有高度，用文字撑的，所有浏览器都将把px值当做offsetHeight 总结一下，全线兼容。 特别注意，IE6、7、8下，盒子没有高度，文字撑的，用currentStyle.height是auto。体现出了offsetHeight的好用。 1.3 clientWidth和clientHeight全线兼容，就一丢丢IE6的问题 client表示“客户端”这里就是一个名字而已，不用在意这个名字。 clientWidth就是自己的width+padding的值。 也就是说，比offsetWidth少了border。 如果盒子没有宽度，那么那么所有浏览器都将把px值当做clientWidth，而不是100% 如果盒子没有高度，用文字撑的，IE6 clientHeight**是0**，其他浏览器都是数值。 总结一下，我们的6个属性要铭记于心，就offsetLeft、offsetTop比较闹腾，但是合理使用，也没兼容问题了。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>offsetLeft</tag>
        <tag>offsetTop</tag>
        <tag>offsetWidth</tag>
        <tag>offsetHeight</tag>
        <tag>clientWidth</tag>
        <tag>clientHeight</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式方法应用]]></title>
    <url>%2F2018%2F10%2F09%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%96%B9%E6%B3%95%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[涉及正则表达式的方法： 字符串的方法“abc” match(); search(); replace(); 正则表达式/\d/. exec(); test();一、字符串的方法1.match方法match的哲学，说白了就是我们最正统的正则，在茫茫多的字符串中，拿到我们想要的东西。例如：拿到所有数字1234var str = &quot;今年是2019年的新年，我拿到了2000红包，但钱包却为-4.5元，最遗憾的是又涨了一岁。&quot;;var reg = /-?\d+\.?\d*/g;var array = str.match(reg);console.log(array); 正则表达式没有 g 修饰符，match 和 exec 结果完全一样。都是类数组对象123456var str = &quot;ABCDEFG1234567abcdefg&quot;;var reg = /[A-Z]/;var array1 = str.match(reg);var array2 = reg.exec(str); console.log(array1); //[&quot;A&quot;, index: 0, input: &quot;ABCDEFG1234567abcdefg&quot;] console.log(array2); //[&quot;A&quot;, index: 0, input: &quot;ABCDEFG1234567abcdefg&quot;] 正则表达式有g修饰符，match会罗列所有结果，返回纯数组1234var str = &quot;34234fafafdDGSFGSE&quot;; var reg = /[a-z]g/; var array = str.match(reg); console.log(array); //[&quot;f&quot;, &quot;a&quot;, &quot;f&quot;, &quot;a&quot;, &quot;f&quot;, &quot;d&quot;] match能不能分组捕获呢？能！()就是分组捕获，\1 就表示这第一个捕获，\2 就是第二个位置的捕获。12345678910111213141516171819 var str = &quot;154-344-133-876-876-555-534&quot;; var reg = /(\d&#123;3&#125;)\-\1/g; var array = str.match(reg); console.log(array);//应用此例子寻找连续相同子串 var str = &quot;ABCCCDDDDDEFFFFFFFFFFFFGGGGHHIIII&quot;; var reg = /(\w)\1+/g; var array = str.match(reg); // 输出最大的相同子串var maxLength = 0;var maxchar = &quot;&quot;;for (var i = 0; i &lt; array.length; i++) &#123; if(array[i].length &gt; maxLength)&#123; maxLength = array[i].length; maxchar = array[i]; &#125; &#125;;console.log(maxchar); 2.search方法返回的是符合正则表达式的第一个位置12345678910var str = &quot;ABCDEFG122234555567abcdefg&quot;;var reg = /(\w)\1+/g; //重复的字母、数字var number = str.search(reg);console.log(number);//search就是能用正则式的 indexOf。// var str = &quot;ABCDEFG122234555567abcdefg&quot;;// console.log(str.indexOf(&quot;FG&quot;)); 3.replace方法replace就是替换，但只会换一个，寻找到第一个匹配的，就不再往后匹配了。123456789var str = &quot;今天看了港剧《大时代》，蓝洁瑛演的真好。很喜欢蓝洁瑛，我要让蓝洁瑛做我女朋友。&quot;var str = str.replace(&quot;蓝洁瑛&quot;,&quot;小犹太&quot;);console.log(str); //今天看了港剧《大时代》，小犹太演的真好。很喜欢蓝洁瑛，我要让蓝洁瑛做我女朋友。//=======================//replace第一个参数可以是正则表达式，g就是全局替换。var str = &quot;今天看了港剧《大时代》，蓝洁瑛演的真好。很喜欢蓝洁瑛，我要让蓝洁瑛做我女朋友。&quot;var str = str.replace(/蓝洁瑛/g,&quot;小犹太&quot;);console.log(str); //今天看了港剧《大时代》，小犹太演的真好。很喜欢小犹太，我要让小犹太做我女朋友。 replace函数用法，第二个参数是一个函数。如果replace函数的第二个参数是一个函数，那么每次匹配到正则的时候，就会调用一次这个函数，这个函数天生有参数 return 的值就是要替换的值12345678var str = &quot;今天看了港剧《大时代》，蓝洁瑛演的真好。很喜欢蓝洁瑛，我要让蓝洁瑛做我女朋友。&quot; str = str.replace(/蓝洁瑛/g,function(a,b,c)&#123; return &quot;小犹太&quot;; //a 参数就是匹配上的字符串 //b 参数就是匹配上的字符串的下标 //c 参数就是源字符串 &#125;); console.log(str); replace能动态替换123456var str = &quot;今年是2019年的新年，我拿到了200元红包，但钱包却为40元，最遗憾的是又涨了1岁。&quot;; str = str.replace(/\d+元/g,function(a)&#123; return &quot;$&quot; + Math.round((parseInt(a) / 6) * 100) / 100;&#125;);console.log(str); Math.round的用法： Math.round(2.5); 输出结果为 3 四舍五入取整问：求 6.888精确到小数点后两位？Math.round(6.888); 结果：7正解思路：先扩大100倍，求完在缩小100倍。console.log(Math.round(6.888*100)/100); replace分组，直接在替代字符串中就用 $1 和 $2 来表示捕获的东西1234 //交换单词位置var str = &quot;First Second&quot;;str = str.replace(/(\w+)\s(\w+)/,&quot;$2 $1&quot;);console.log(str); replace 里面function的用法12345678var str = &quot;First Second&quot;;str = str.replace(/(\w+)\s(\w+)/,function(match,$1,$2,index,str)&#123; console.log(match); console.log($1); console.log($2); console.log(index); console.log(str); &#125;); 一个模板引擎，瀑布流123456789101112131415161718192021222324252627//Json 对象// var obj = &#123;// a : 1 , // b : 2 , // c : 3// &#125;;// console.log(obj.b);// console.log(obj[b]);//================================var dictionary = &#123; xingming : &quot;考拉&quot;, nianling : &quot;18&quot;, xingbie : &quot;女&quot;, nvyougeshu : 500&#125;var str = &quot;大家好，我叫★xingming★，我今年★nianling★岁了,我是个可爱的★xingbie★生,我的女朋友有★nvyougeshu★个&quot;str = str.replace(/★(\w+)★/g,function(match,$1)&#123; return dictionary[$1];&#125;);console.log(str); 二、正则表达式的方法1.exec方法exec 每次执行结果按序输出，不管结果有几个，一次只输出一个123456789var str = &quot;ABCDEFG1234567abcdefg&quot;;var reg = /[a-z]/g; console.log(reg.exec(str));//遍历所有结果：var a;while((a = reg.exec(str)) != null)&#123; //为什么是null？ 遍历完出现 null 又再一次循环遍历。 console.log(a);&#125; 求最大相同子串，比较exec 和 match 的不同exec哲学，就是match的反面，match能把所有结果在数组中输出, exec 是将所有结果通过 while() 迭代输出,省的你先弄出一个array，然后for遍历，还不如就一个一个遍历.123456789101112131415var str = &quot;qqqqqqq1111111111AAAAAAABBBBBBBB&quot;;var reg = /(\w)\1+/g;var maxl = 0;var maxc = &quot;&quot;;var a;while((a = reg.exec(str)) != null)&#123; if(a[0].length &gt; maxl)&#123;//a[0].length类数组对象，指代本身。 maxl = a[0].length; maxc = a[0]; &#125;&#125;console.log(maxc); 1.test方法表单验证最最常用的东西一个模拟表单验证实例：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;match&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;form action=&quot;bbb.php&quot; id=&quot;biaodan&quot;&gt; &lt;p&gt; 请输入姓名： &lt;input type=&quot;text&quot; id=&quot;xingming&quot; /&gt; &lt;/p&gt; &lt;p&gt; 请输入年龄： &lt;input type=&quot;text&quot; id=&quot;nianling&quot;/&gt; &lt;/p&gt; &lt;p&gt; 请输入手机号码： &lt;input type=&quot;text&quot; id=&quot;shoujihao&quot;/&gt; &lt;/p&gt; &lt;p&gt; 请输入邮箱： &lt;input type=&quot;text&quot; id=&quot;youxiang&quot;/&gt; &lt;/p&gt; &lt;p&gt; &lt;input type=&quot;submit&quot; /&gt; &lt;/p&gt; &lt;/form&gt; &lt;script type=&quot;text/javascript&quot;&gt; //得到表单 var biaodan = document.getElementById(&quot;biaodan&quot;); var xingming = document.getElementById(&quot;xingming&quot;); var nianling = document.getElementById(&quot;nianling&quot;); var shoujihao = document.getElementById(&quot;shoujihao&quot;); var youxiang = document.getElementById(&quot;youxiang&quot;); //表单试图提交的时候，触发onsubmit事件 //这个函数返回了false,表单不会被提交 biaodan.onsubmit = function()&#123; //验证各种 //验证姓名 if(!/^[\u4e00-\u9fa5]&#123;2,4&#125;$/.test(xingming.value))&#123; alert(&quot;错误的姓名&quot;); return false; &#125; if(!/^\d&#123;1,3&#125;$/.test(nianling.value))&#123; alert(&quot;错误的年龄&quot;); return false; &#125; if(parseInt(nianling.value) &lt; 10 || parseInt(nianling.value) &gt; 104)&#123; alert(&quot;年龄不在范围!&quot;); return false; &#125; if(!/^\d&#123;11&#125;$/.test(shoujihao.value))&#123; alert(&quot;错误的手机号&quot;); return false; &#125; return true; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>正则表达式方法</category>
      </categories>
      <tags>
        <tag>正则表达式方法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算后样式,window.getComputedStyle(),getPropertyValue(),fetchComputerStyle]]></title>
    <url>%2F2018%2F03%2F09%2F%E8%AE%A1%E7%AE%97%E5%90%8E%E6%A0%B7%E5%BC%8Fwindow.getComputedStyle()%E5%92%8CgetPropertyValue()%2F</url>
    <content type="text"><![CDATA[1. 高级浏览器和低级浏览器的不同写法现在我们只能得到行内的样式，事实上DOM提供了可靠的API，得到计算后的样式。 W3C制定的标准API，所有现代浏览器（包括IE9，但不包括之前的版本）都实现了window.getComputedStyle()，该方法接收一个要进行样式计算的元素，并返回一个样式对象。样式对象提供了一个名为 getPropertyValue() 的方法，用于检索特定样式属性的计算样式。getPropertyValue方法接收css属性名称，而不是驼峰式的名称。getPropertyValue()可以不写，直接用方括号来检索属性也可以。 get得到，computed计算，style样式 get得到，property属性，vaule值 比如： window.getComputedStyle(Div_box).getPropertyValue(&quot;width&quot;);一个小知识，所有window对象的方法，都可以不用写window。得到计算后的样式，可以直接使用 getComputedStyle 函数，而不用写window。getComputedStyle(oDiv).getPropertyValue(&quot;width&quot;)还要注意，引号里面不是驼峰： getComputedStyle(oDiv).getPropertyValue(&quot;**padding-left**&quot;);getPropertyValue可以简写：getComputedStyle(oDiv)[&quot;padding-left&quot;];计算后样式是综合的结果，就是这个元素此时的状态：现在有css：background: url(images/songhuiqiao.jpg) no-repeat 10px 10px;虽然没有显式指定background-position，但是有值： getComputedStyle(oDiv)[&quot;background-position&quot;] // 10px 10px;DOM提供给JS的API非常牛叉，一个元素此时的状态，完完全全可以被得到。 好用的东西，一定不兼容。所以IE6、7、8不兼容getComputedStyle.getPropertyValue()的写法，另外一套写法：附加在元素身上的currentStyle属性，它表现和style点语法一样，使用驼峰式访问。oDiv.currentStyle.width现在要注意，它必须使用驼峰： oDiv.currentStyle.paddingTopIE6、7、8不能被文字撑出高，得到”auto”这个值。颜色值在高级浏览器中是rgb()格式，低级浏览器中就是原样输出。超级无敌大坑，可以不写点语法，可以使用方括号，但是里面也要写驼峰。oDiv.currentStyle[&quot;paddingLeft&quot;]总结写法： 高级：window.getComputedStyle(oDiv).getPropertyValue(“padding-left”);getComputedStyle(oDiv).getPropertyValue(“padding-left”);getComputedStyle(oDiv)[“padding-left”]; IE6、7、8：oDiv.currentStyle.paddingLeft;oDiv.currentStyle[“paddingLeft”];3.2 能力检测 IE不认识getComputedStyle视为错误 Chrome不认识currentStyle视为错误所以，我们现在就要进行一个兼容性写法。 新玩家会认为，要检测浏览器版本，如果 版本是IE6、7、8 那么……。实际上，老司机都不这么做。直接判断，这就是能力检测。 12345if(window.getComputedStyle)&#123;alert(&quot;我会getComputedStyle&quot;);&#125;else&#123; alert(&quot;我不会getComputedStyle&quot;) &#125; 所以使用能力检测，我们可以在不同浏览器中得到兼容性的写法，输出padding-left的值：12345 if(window.getComputedStyle)&#123; alert(getComputedStyle(oDiv)[&quot;padding-left&quot;]); &#125;else&#123; alert(oDiv.currentStyle.paddingLeft);&#125; 3. fetchComputedStyle(obj,property);现在我们要在一个轮子，就是封装一个函数，这个函数接收两个参数，第一个是对象，第二个是属性名。fetchComputedStyle(obj,”padding-left”);这个函数返回的是这个属性值的计算后的样式。无论用户输入的是驼峰还是非驼峰，都能正常运行。下例：通过fetchComputedStyle调取getComputedStyle计算getPropertyValue属性值。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;fetchComputedStyle(obj,property)&lt;/title&gt; &lt;style&gt; div&#123; padding: 10px 20px 30px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; //fetchComputedStyle(oDiv,”padding-left”); function fetchComputedStyle(obj , property)&#123; //能力检测 if(window.getComputedStyle)&#123; //现在要把用户输入的property中检测一下是不是驼峰，转为连字符写法 //强制把用户输入的词儿里面的大写字母，变为小写字母加- //paddingLeft → padding-left property = property.replace(/([A-Z])/g , function(match,$1)&#123; return &quot;-&quot; + $1.toLowerCase(); &#125;); return window.getComputedStyle(obj)[property]; &#125;else&#123; //IE只认识驼峰，我们要防止用户输入短横，要把短横改为大写字母 //padding-left → paddingLeft property = property.replace(/\-([a-z])/g , function(match,$1)&#123; return $1.toUpperCase(); &#125;); return obj.currentStyle[property]; &#125; &#125; var oDiv = document.getElementsByTagName(&quot;div&quot;)[0]; alert(fetchComputedStyle(oDiv,&quot;padding-left&quot;)); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>计算后样式</tag>
        <tag>window.getComputedStyle()</tag>
        <tag>getPropertyValue()</tag>
        <tag>fetchComputerStyle</tag>
      </tags>
  </entry>
</search>
